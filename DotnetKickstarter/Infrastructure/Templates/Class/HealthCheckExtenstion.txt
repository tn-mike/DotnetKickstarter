using System.Net;
using System.Reflection;
using System.Text;
using System.Text.Json;
using Microsoft.Extensions.Diagnostics.HealthChecks;

namespace {{NAMESPACE}}
{
    public static class HealthCheckExtenstion
    {
        public static Task WriteResponse(HttpContext context, HealthReport report)
        {
            context.Response.ContentType = "application/json; charset=utf-8";
            var options = new JsonWriterOptions { Indented = true };

            using var memoryStream = new MemoryStream();
            using (var jsonWriter = new Utf8JsonWriter(memoryStream, options))
            {
                jsonWriter.WriteStartObject();
                jsonWriter.WriteString("status", report.Status.ToString());
                jsonWriter.WriteStartObject("results");

                foreach (var healthReportEntry in report.Entries)
                {
                    jsonWriter.WriteStartObject(healthReportEntry.Key);
                    jsonWriter.WriteString("status", healthReportEntry.Value.Status.ToString());
                    jsonWriter.WriteString("description", healthReportEntry.Value.Description);
                    jsonWriter.WriteStartObject("data");

                    foreach (var item in healthReportEntry.Value.Data)
                    {
                        jsonWriter.WritePropertyName(item.Key);
                        JsonSerializer.Serialize(jsonWriter, item.Value, item.Value?.GetType() ?? typeof(object));
                    }

                    jsonWriter.WriteEndObject();
                    jsonWriter.WriteEndObject();
                }

                var env = Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT");
                Assembly assembly = Assembly.GetExecutingAssembly();
                FileInfo file = new FileInfo(assembly.Location);
                string dateModified = file.LastWriteTime.ToString("yyyyMMdd-HHmmss");
                var hostName = Dns.GetHostName();

                jsonWriter.WriteEndObject();
                jsonWriter.WriteString("datetime", DateTime.Now.ToString("dd/MM/yyyy : HH:mm:ss"));
                jsonWriter.WriteString("environment", env);
                jsonWriter.WriteString("hostName", hostName);
                jsonWriter.WriteString("version", dateModified);
                jsonWriter.WriteEndObject();
            }

            return context.Response.WriteAsync(Encoding.UTF8.GetString(memoryStream.ToArray()));
        }
    }
}